# auto_refresh_csv.py
import time, random, psycopg2
from datetime import date
from dateutil.relativedelta import relativedelta  # pip install python-dateutil

DSN = "host=localhost port=5432 dbname=e-commerce user=postgres password=0000"

def next_month(d: date) -> date:
    # –≤—Å–µ–≥–¥–∞ 1-–µ —á–∏—Å–ª–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    return (d.replace(day=1) + relativedelta(months=1))

def main():
    print("Auto-refresh CSV started üöÄ (writing to public.orders_monthly_csv)")
    with psycopg2.connect(DSN) as conn:
        conn.autocommit = True
        cur = conn.cursor()

        # –≤–æ–∑—å–º—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –∏–∑ CSV-—Ç–∞–±–ª–∏—Ü—ã
        cur.execute("SELECT COALESCE(MAX(month::date), DATE '2016-08-01') FROM public.orders_monthly_csv;")
        last_month = cur.fetchone()[0]
        if isinstance(last_month, str):
            last_month = date.fromisoformat(last_month)

        # –ø—Ä–∏–±–ª–∏–∑–∏–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
        cur.execute("""
            SELECT orders_count
            FROM public.orders_monthly_csv
            WHERE month = (SELECT MAX(month) FROM public.orders_monthly_csv);
        """)
        row = cur.fetchone()
        base = row[0] if row and row[0] is not None else 300

        while True:
            m = next_month(last_month)
            # —Å–≥–µ–Ω–µ—Ä–∏–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—É—é –¥–∏–Ω–∞–º–∏–∫—É –≤–æ–∫—Ä—É–≥ base (–º–æ–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥ —Å–≤–æ–π –¥–∞—Ç–∞—Å–µ—Ç)
            delta = random.randint(-250, 350)
            value = max(0, base + delta)

            cur.execute(
                "INSERT INTO public.orders_monthly_csv (month, orders_count) VALUES (%s, %s) ON CONFLICT DO NOTHING;",
                (m, int(value))
            )
            print(f"CSV+ {m.isoformat()} -> {value}")

            last_month = m
            base = value
            time.sleep(8)   # –∏–Ω—Ç–µ—Ä–≤–∞–ª 5‚Äì20 —Å–µ–∫ –ø–æ –∑–∞–¥–∞–Ω–∏—é; –ø–æ—Å—Ç–∞–≤–∏–ª 8 —Å–µ–∫—É–Ω–¥

if __name__ == "__main__":
    main()
